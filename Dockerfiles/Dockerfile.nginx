FROM nginx:alpine AS deps

RUN apk add --no-cache \
    gcc \
    libc-dev \
    make \
    openssl-dev \
    pcre-dev \
    zlib-dev \
    linux-headers \
    curl \
    gnupg \
    libxslt-dev \
    geoip-dev \
    g++ \
    git \
    libtool \
    automake \
    autoconf \
    file


FROM deps AS build
RUN git clone --depth 1 -b v3/master --single-branch https://github.com/SpiderLabs/ModSecurity &&\
    cd ModSecurity &&\
    git submodule init &&\
    git submodule update
WORKDIR /ModSecurity
RUN ./build.sh && \
    ./configure && \
    make && \
    make install

# https://nginx.org/download/nginx-1.27.3.tar.gz

# Get and compile the Nginx connector
ENV NGINX_VERSION 1.27.4
WORKDIR /
RUN git clone --depth 1 https://github.com/SpiderLabs/ModSecurity-nginx.git
RUN nginx -v 2>&1 | awk -F/ '{print $2}' > /tmp/nginx_version
RUN wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
    tar zxvf nginx-${NGINX_VERSION}.tar.gz

FROM build AS configure
ENV NGINX_VERSION 1.27.4
WORKDIR /nginx-${NGINX_VERSION}
RUN ./configure --with-compat --add-dynamic-module=../ModSecurity-nginx && \
    make modules

RUN mkdir -p /etc/nginx/modules && \
    cp objs/ngx_http_modsecurity_module.so /etc/nginx/modules/
COPY nginxd /etc/nginx
COPY nginxd/nginx.conf /tmp/nginx.conf
RUN cat /tmp/nginx.conf > /etc/nginx/nginx.conf
RUN echo "Hi Maw!"

WORKDIR /etc/nginx/modsecurity
RUN git clone https://github.com/coreruleset/coreruleset.git
RUN cp coreruleset/crs-setup.conf.example coreruleset/crs-basic.conf

# clean up source folders
WORKDIR /
RUN rm -rf /ModSecurity /ModSecurity-nginx /nginx-${NGINX_VERSION} /nginx-${NGINX_VERSION}.tar.gz

# RUN apk add pcre-dev zlib-dev

# Clean up build dependencies
# RUN apk del gcc libc-dev make openssl-dev pcre-dev zlib-dev linux-headers \
#    curl gnupg libxslt-dev geoip-dev g++ git libtool automake autoconf file
EXPOSE 443